import { useState, useEffect } from 'react'
import Image from 'next/image'
import Link from 'next/link'
import { useRouter } from "next/router";
import Head from 'next/head'

import firebase_app from '../../firebase-config'
import { signInWithEmailAndPassword, getAuth } from "firebase/auth";

export default function Login() {
    const [windowHeight, setWindowHeight] = useState(null)
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')

    const router = useRouter();
    const auth = getAuth(firebase_app);

    useEffect(() => {
        const handleResize = () => {
            setWindowHeight(window.innerHeight)
        }

        handleResize()

        window.addEventListener('resize', handleResize)
        return () => window.removeEventListener('resize', handleResize)
    }, [])

    const handleForm = async (event) => {
        event.preventDefault()

        var invalid = false;

        resetInvalidMessages();

        if (!email) {
            emptyEmail()
            invalid = true;
        }

        if (!password) {
            emptyPassword()
            invalid = true;
        }

        if (invalid) { return }

        const { result, error } = await signIn(email, password);

        if (error) {
            return console.log(error)
        }

        return router.push('/')
    }

    const resetInvalidMessages = () => {
        document.getElementById('email').style.border = 'none'
        document.getElementById('spanEmail').style.display = 'none'

        document.getElementById('password').style.border = 'none'
        document.getElementById('spanPassword').style.display = 'none'
    }

    const emptyPassword = () => {
        document.getElementById('password').value = ''
        document.getElementById('password').style.border = '1px solid #dc2626'
        document.getElementById('spanPassword').style.display = 'flex'
        document.getElementById('spanPassword').textContent = 'Required field'
    }

    const emptyEmail = () => {
        document.getElementById('email').value = ''
        document.getElementById('email').style.border = '1px solid #dc2626'
        document.getElementById('spanEmail').style.display = 'flex'
        document.getElementById('spanEmail').textContent = 'Required field'
    }

    const firebaseErrorHandling = (errorCode) => {
        document.getElementById('email').value = ''
        document.getElementById('email').style.border = '1px solid #dc2626'

        document.getElementById('password').value = ''
        document.getElementById('password').style.border = '1px solid #dc2626'

        switch (errorCode) {
            case 'auth/invalid-email':
                document.getElementById('spanEmail').style.display = 'flex'
                document.getElementById('spanEmail').textContent = 'Invalid email'
                break;
            case 'auth/user-not-found':
                document.getElementById('spanEmail').style.display = 'flex'
                document.getElementById('spanEmail').textContent = 'User not found'
                break;
            case 'auth/wrong-password':
                document.getElementById('spanPassword').style.display = 'flex'
                document.getElementById('spanPassword').textContent = 'Incorrect credentials'
                break;
        }
    }

    async function signIn(email, password) {
        let result = null,
            error = null;
        try {
            result = await signInWithEmailAndPassword(auth, email, password);
        } catch (e) {
            error = e;
            firebaseErrorHandling(e.code)
        }

        return { result, error };
    }

    return (
        <>
            <Head>
                <title>Linktree</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>
            <div className="main_signup_login" style={{ minHeight: windowHeight }}>
                <div className="signup_login">
                    <form className='form' onSubmit={handleForm}>
                        <h1>Log in to your account</h1>
                        <h3>Your personalized link hub awaits</h3>
                        <input placeholder='Email' autoComplete='off' name="email" id="email" onChange={(e) => setEmail(e.target.value)}></input>
                        <span id='spanEmail'>Invalid</span>
                        <input placeholder='Password' autoComplete='off' name="password" id="password" type='password' onChange={(e) => setPassword(e.target.value)}></input>
                        <span id='spanPassword'>Invalid</span>
                        <label><a>Forgot password?</a></label>
                        <button id='login_btn'>Log In</button>
                        <p>Don&apos;t have an account? <Link href='/signup'>Sign up</Link></p>
                    </form>
                </div>
                <div className="banner">
                    <Image src='https://ik.imagekit.io/ricardo5ro/Linktree/general/login.jpg?updatedAt=1683627554047' alt='Side banner' width={windowHeight / 1.5} height={windowHeight * 1}></Image>
                </div>
            </div>
        </>
    )
}